[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introduction",
    "section": "",
    "text": "STAT 515 MID PROJECT\nThis Project is on Redesigning Examples of Visualization obtained from web sources.\nFeel free to explore around.\n\n\nGROUP Members :\n\n\n\nKASHYAP KANDIBANDA\n\n\nHi, This is Kashyap Kandibanda, i am pursuing an MS in Data Analytics Engineering at George Mason University. With a background in mechanical engineering from Amrita School of Engineering, I have honed my problem-solving and data analysis skills. I’m passionate about using data-driven insights to solve complex problems, improve processes, and drive innovation. I also have experience in leadership roles through extracurricular activities, such as organizing workshops and volunteer projects, reflecting my teamwork and management abilities.\nI have gained hands-on experience through various roles, including a backend intern at GrootLabs, where I worked on optimizing backend systems for performance and scalability. I also served as an associate at GoldSquare Avenues, contributing to key decision-making and project management.\n\n\n\nAmarnath Reddy Ganta\n\n\nHello Everybody! My name is Amarnath Reddy Ganta and welcome to my website!\nI finished my Bachelor of Technology in Computer Science and Engineering from GITAM University in Hyderabad, India. At this moment, I am doing my master’s in Data Analytics and Engineering at George Mason University. My career goals include gaining expertise in Big Data and Data analytics, enhancing my career prospects, and becoming well-versed with industry requirements in Big Data - one of the major areas of interest I acquired during my internship this year.\nI am versed with Windows OS. I have worked with Google Collab, Jupyter Notebook, Py Torch, Eclipse, and Visual Studio Code.\nI have worked on AWS and Natural Language Processing (NLP) Technology during my Undergraduate and internship (during my internship this year).\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Case_1.html",
    "href": "Case_1.html",
    "title": "Case_1",
    "section": "",
    "text": "Problem Statement:\nThe visuals on the U.S. Census Bureau website are flawed since they don’t go far enough into comparing payrolls and employment in manufacturing across different areas or subsectors. Additionally, because of the design’s relative simplicity, it is more difficult to convey subtleties like historical patterns or outside variables’ influence (such as automation or changes in the economy). Beyond a high-level comparison with other industries, the capacity to deliver actionable insights is limited by the visual concentration on a small number of fundamental parameters.\n\n\nReference: United States Census Bureau. January 31, 2024. producing payroll for employers. United States Department of Commerce. Manufacturing Employer Payroll: https://www.census.gov/library/visualizations/2024/econ.html\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(lattice)\n\n\nemployees_info &lt;- data.frame(\n  Respective_Sectors = c(\"Health\", \"Retail\", \"Accom & Food\", \"Admin & Waste\",\n                         \"Mfg.\", \"Prof. Serv.\", \"Constr.\", \"Finance\",\n                         \"Wholesale\", \"Transp.\", \"Other Serv.\", \"Edu.\",\n                         \"Co. Mgmt.\", \"Info.\", \"Real Est.\", \"Arts & Rec.\",\n                         \"Util.\", \"Mining & Oil\", \"Agri.\"),\n  Avg_Employees_In_Mlns = c(21.2, 15.9, 13.8, 13.6, 12.2, 10.2, 7.4, 6.8,\n                            6.1, 6.1, 5.5, 3.7, 3.7, 3.6, 2.3, 2.3, 0.6, 0.5, 0.2)\n)  \nprint(employees_info)\n\n   Respective_Sectors Avg_Employees_In_Mlns\n1              Health                  21.2\n2              Retail                  15.9\n3        Accom & Food                  13.8\n4       Admin & Waste                  13.6\n5                Mfg.                  12.2\n6         Prof. Serv.                  10.2\n7             Constr.                   7.4\n8             Finance                   6.8\n9           Wholesale                   6.1\n10            Transp.                   6.1\n11        Other Serv.                   5.5\n12               Edu.                   3.7\n13          Co. Mgmt.                   3.7\n14              Info.                   3.6\n15          Real Est.                   2.3\n16        Arts & Rec.                   2.3\n17              Util.                   0.6\n18       Mining & Oil                   0.5\n19              Agri.                   0.2\n\n\n\npayroll_info &lt;- data.frame(\n  Respective_Sectors = c(\"Health\", \"Retail\", \"Accom & Food\", \"Admin & Waste\",\n                         \"Mfg.\", \"Prof. Serv.\", \"Constr.\", \"Finance\",\n                         \"Wholesale\", \"Transp.\", \"Other Serv.\", \"Edu.\",\n                         \"Co. Mgmt.\", \"Info.\", \"Real Est.\", \"Arts & Rec.\",\n                         \"Util.\", \"Mining & Oil\", \"Agri.\"),\n  Avg_Payroll_In_Dollars = c(60435, 36685, 25598, 56285, 69846, 105185,\n                             72589, 123705, 87120, 56557, 41702, 48193,\n                             126844, 141904, 69496, 47463, 121998, 109364, 52905)\n)\n\nprint(payroll_info)\n\n   Respective_Sectors Avg_Payroll_In_Dollars\n1              Health                  60435\n2              Retail                  36685\n3        Accom & Food                  25598\n4       Admin & Waste                  56285\n5                Mfg.                  69846\n6         Prof. Serv.                 105185\n7             Constr.                  72589\n8             Finance                 123705\n9           Wholesale                  87120\n10            Transp.                  56557\n11        Other Serv.                  41702\n12               Edu.                  48193\n13          Co. Mgmt.                 126844\n14              Info.                 141904\n15          Real Est.                  69496\n16        Arts & Rec.                  47463\n17              Util.                 121998\n18       Mining & Oil                 109364\n19              Agri.                  52905\n\n\n\ncolnames(employees_info)[1] &lt;- \"Respective_Sectors\" \ncolnames(payroll_info)[1] &lt;- \"Respective_Sectors\"  \n\n\nmerging_info &lt;- merge(employees_info, payroll_info, by =\"Respective_Sectors\")\n\n1. Payroll vs Workers (Linear Regression Scatter Plot):\nThe average payroll per employee is plotted against the average number of employees, expressed in millions. The trend between these two variables is depicted by the dashed black regression line, which implies that industries with larger workforces do not always pay better. In contrast to industries like healthcare and retail, which have big workforces but relatively low compensation, professional services and company management, for instance, have fewer employees but significantly larger payrolls.\n\nImportant characteristics:\n\nThe link between payroll and worker size is depicted by the black dashed line, while dark green spots indicate sector data.\nWhen comparing two measures, trends or lack thereof may be graphically shown with the use of linear regression.\n\nggplot(merging_info, aes(x = Avg_Employees_In_Mlns, y = Avg_Payroll_In_Dollars)) +\n  geom_point(color = 'darkgreen', size = 3) +\n  geom_smooth(method = \"lm\", linetype = \"dashed\", color = \"black\") +\n  labs(title = \"Average Payroll per Employee vs. Average Number of Employees\",\n       x = \"Average Number of Employees (in Millions)\",\n       y = \"Average Payroll per Employee (in $)\") +\n  scale_y_continuous(labels = scales::comma) +  \n  scale_x_continuous(labels = scales::comma) +  \n  theme(plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n        axis.title.x = element_text(size = 12),\n        axis.title.y = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        plot.margin = margin(1, 1, 1, 1, \"cm\"))\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n2. Sector-specific Heatmap of Average Workers and Payroll:\nThe heatmap makes it possible to compare two indicators directly, for all sectors: the average payroll and the average number of workers. Darker hues imply greater values, such as in Information, Finance, and Company Management sectors, which provide larger payrolls. Lighter hues, on the other hand, indicate lower payroll values even for significant staff numbers in Accommodation & Food Services and Retail. The huge differences in labor size and salary between industries are effectively depicted in this graph.\n\nImportant characteristics:\n\nThe gradient from light blue to dark blue in the heatmap represents the magnitude of the data.\nReadability is enhanced with flipped coordinates, or sectors on the Y-axis.\nComparing sectors simultaneously on two important parameters is made simple by a clear structure.\n\nheat_map_information &lt;- merging_info %&gt;%\n  pivot_longer(cols = c(\"Avg_Employees_In_Mlns\", \"Avg_Payroll_In_Dollars\"),\n               names_to = \"Metrics\",\n               values_to = \"Value\")\n\nggplot(heat_map_information, aes(x = Respective_Sectors, y = Metrics, fill = Value)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(low = \"lightblue\", high = \"darkblue\") +\n  coord_flip() +  # Flip coordinates for better readability\n  labs(title = \"Heatmap of Average Employees and Payroll by Sector\",\n       x = \"Respective Sectors\",\n       y = \"Metrics\",\n       fill = \"Value\",\n       caption = \"Source: U.S. Census Bureau\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        plot.title = element_text(hjust = 0.5),\n        panel.grid.major.y = element_blank())"
  },
  {
    "objectID": "Case_1.html#concerns-regarding-the-census-bureaus-manufacturing-payroll-visualizations",
    "href": "Case_1.html#concerns-regarding-the-census-bureaus-manufacturing-payroll-visualizations",
    "title": "Case_1",
    "section": "",
    "text": "Problem Statement:\nThe visuals on the U.S. Census Bureau website are flawed since they don’t go far enough into comparing payrolls and employment in manufacturing across different areas or subsectors. Additionally, because of the design’s relative simplicity, it is more difficult to convey subtleties like historical patterns or outside variables’ influence (such as automation or changes in the economy). Beyond a high-level comparison with other industries, the capacity to deliver actionable insights is limited by the visual concentration on a small number of fundamental parameters.\n\n\nReference: United States Census Bureau. January 31, 2024. producing payroll for employers. United States Department of Commerce. Manufacturing Employer Payroll: https://www.census.gov/library/visualizations/2024/econ.html\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(lattice)\n\n\nemployees_info &lt;- data.frame(\n  Respective_Sectors = c(\"Health\", \"Retail\", \"Accom & Food\", \"Admin & Waste\",\n                         \"Mfg.\", \"Prof. Serv.\", \"Constr.\", \"Finance\",\n                         \"Wholesale\", \"Transp.\", \"Other Serv.\", \"Edu.\",\n                         \"Co. Mgmt.\", \"Info.\", \"Real Est.\", \"Arts & Rec.\",\n                         \"Util.\", \"Mining & Oil\", \"Agri.\"),\n  Avg_Employees_In_Mlns = c(21.2, 15.9, 13.8, 13.6, 12.2, 10.2, 7.4, 6.8,\n                            6.1, 6.1, 5.5, 3.7, 3.7, 3.6, 2.3, 2.3, 0.6, 0.5, 0.2)\n)  \nprint(employees_info)\n\n   Respective_Sectors Avg_Employees_In_Mlns\n1              Health                  21.2\n2              Retail                  15.9\n3        Accom & Food                  13.8\n4       Admin & Waste                  13.6\n5                Mfg.                  12.2\n6         Prof. Serv.                  10.2\n7             Constr.                   7.4\n8             Finance                   6.8\n9           Wholesale                   6.1\n10            Transp.                   6.1\n11        Other Serv.                   5.5\n12               Edu.                   3.7\n13          Co. Mgmt.                   3.7\n14              Info.                   3.6\n15          Real Est.                   2.3\n16        Arts & Rec.                   2.3\n17              Util.                   0.6\n18       Mining & Oil                   0.5\n19              Agri.                   0.2\n\n\n\npayroll_info &lt;- data.frame(\n  Respective_Sectors = c(\"Health\", \"Retail\", \"Accom & Food\", \"Admin & Waste\",\n                         \"Mfg.\", \"Prof. Serv.\", \"Constr.\", \"Finance\",\n                         \"Wholesale\", \"Transp.\", \"Other Serv.\", \"Edu.\",\n                         \"Co. Mgmt.\", \"Info.\", \"Real Est.\", \"Arts & Rec.\",\n                         \"Util.\", \"Mining & Oil\", \"Agri.\"),\n  Avg_Payroll_In_Dollars = c(60435, 36685, 25598, 56285, 69846, 105185,\n                             72589, 123705, 87120, 56557, 41702, 48193,\n                             126844, 141904, 69496, 47463, 121998, 109364, 52905)\n)\n\nprint(payroll_info)\n\n   Respective_Sectors Avg_Payroll_In_Dollars\n1              Health                  60435\n2              Retail                  36685\n3        Accom & Food                  25598\n4       Admin & Waste                  56285\n5                Mfg.                  69846\n6         Prof. Serv.                 105185\n7             Constr.                  72589\n8             Finance                 123705\n9           Wholesale                  87120\n10            Transp.                  56557\n11        Other Serv.                  41702\n12               Edu.                  48193\n13          Co. Mgmt.                 126844\n14              Info.                 141904\n15          Real Est.                  69496\n16        Arts & Rec.                  47463\n17              Util.                 121998\n18       Mining & Oil                 109364\n19              Agri.                  52905\n\n\n\ncolnames(employees_info)[1] &lt;- \"Respective_Sectors\" \ncolnames(payroll_info)[1] &lt;- \"Respective_Sectors\"  \n\n\nmerging_info &lt;- merge(employees_info, payroll_info, by =\"Respective_Sectors\")\n\n1. Payroll vs Workers (Linear Regression Scatter Plot):\nThe average payroll per employee is plotted against the average number of employees, expressed in millions. The trend between these two variables is depicted by the dashed black regression line, which implies that industries with larger workforces do not always pay better. In contrast to industries like healthcare and retail, which have big workforces but relatively low compensation, professional services and company management, for instance, have fewer employees but significantly larger payrolls.\n\nImportant characteristics:\n\nThe link between payroll and worker size is depicted by the black dashed line, while dark green spots indicate sector data.\nWhen comparing two measures, trends or lack thereof may be graphically shown with the use of linear regression.\n\nggplot(merging_info, aes(x = Avg_Employees_In_Mlns, y = Avg_Payroll_In_Dollars)) +\n  geom_point(color = 'darkgreen', size = 3) +\n  geom_smooth(method = \"lm\", linetype = \"dashed\", color = \"black\") +\n  labs(title = \"Average Payroll per Employee vs. Average Number of Employees\",\n       x = \"Average Number of Employees (in Millions)\",\n       y = \"Average Payroll per Employee (in $)\") +\n  scale_y_continuous(labels = scales::comma) +  \n  scale_x_continuous(labels = scales::comma) +  \n  theme(plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n        axis.title.x = element_text(size = 12),\n        axis.title.y = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        plot.margin = margin(1, 1, 1, 1, \"cm\"))\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n2. Sector-specific Heatmap of Average Workers and Payroll:\nThe heatmap makes it possible to compare two indicators directly, for all sectors: the average payroll and the average number of workers. Darker hues imply greater values, such as in Information, Finance, and Company Management sectors, which provide larger payrolls. Lighter hues, on the other hand, indicate lower payroll values even for significant staff numbers in Accommodation & Food Services and Retail. The huge differences in labor size and salary between industries are effectively depicted in this graph.\n\nImportant characteristics:\n\nThe gradient from light blue to dark blue in the heatmap represents the magnitude of the data.\nReadability is enhanced with flipped coordinates, or sectors on the Y-axis.\nComparing sectors simultaneously on two important parameters is made simple by a clear structure.\n\nheat_map_information &lt;- merging_info %&gt;%\n  pivot_longer(cols = c(\"Avg_Employees_In_Mlns\", \"Avg_Payroll_In_Dollars\"),\n               names_to = \"Metrics\",\n               values_to = \"Value\")\n\nggplot(heat_map_information, aes(x = Respective_Sectors, y = Metrics, fill = Value)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(low = \"lightblue\", high = \"darkblue\") +\n  coord_flip() +  # Flip coordinates for better readability\n  labs(title = \"Heatmap of Average Employees and Payroll by Sector\",\n       x = \"Respective Sectors\",\n       y = \"Metrics\",\n       fill = \"Value\",\n       caption = \"Source: U.S. Census Bureau\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        plot.title = element_text(hjust = 0.5),\n        panel.grid.major.y = element_blank())"
  }
]